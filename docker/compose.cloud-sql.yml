# Production setup with Google Cloud SQL
# Usage: CLOUD_SQL_INSTANCE=project:region:instance docker-compose -f docker/compose.cloud-sql.yml up -d --build
# Features: Cloud SQL proxy, IAM auth, production build
# Prerequisites: gcloud auth application-default login
services:
  cloud-sql-proxy:
    image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.15.2
    command:
      - "/cloud-sql-proxy"
      - "--address=0.0.0.0"
      - "--private-ip"
      - "--auto-iam-authn"
      - "--port=5432"
      - "${CLOUD_SQL_INSTANCE}"
    ports:
      - "5432:5432"
    networks:
      - better-chatbot-networks
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5432"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  better-chatbot:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
    ports:
      - '3000:3000'
    environment:
      - NO_HTTPS=1
      - USE_CLOUD_SQL=1
    env_file:
      - .env
    dns:
      - 8.8.8.8
      - 8.8.4.4
    networks:
      - better-chatbot-networks
    depends_on:
      cloud-sql-proxy:
        condition: service_healthy
    restart: unless-stopped

  localhost-helper:
    build:
      context: ../../../libs/dv01-shell-api-gateway/localhost-helper
      dockerfile: Dockerfile
    ports:
      - '3002:3002'
    environment:
      - UPSTREAM_SERVICE_URL=http://better-chatbot:3000
      - PROXY_SERVER_PORT=3002
      - PROXY_PATH=/chatbot
      - API_GATEWAY_URL=https://api-gateway.dv01.cloud
    env_file:
      - .env
    networks:
      - better-chatbot-networks
    restart: unless-stopped

networks:
  better-chatbot-networks:
    driver: bridge